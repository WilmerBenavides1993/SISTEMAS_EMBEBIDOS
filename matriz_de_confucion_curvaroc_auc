#Librerías utilizadas
library(caTools)
library(class)
library(e1071)
set.seed(169)

#Cargar base de datos al entorno de R
datos=read.csv("datos.csv",header =TRUE, sep = ";")

#########CLASIFICADOR KNN##########

y_pred = knn(train = training_set[,-5],
             test = test_set[,-5],
             cl = training_set[,5],
             k = 3)
cm_knn = table(test_set$LABEL,y_pred, dnn = c("Actual", "Predicción"))

#########CLASIFICADOR BAYESIANO##########
#Convertir a factor la etiqueta

training_set$LABEL = factor(training_set$LABEL, levels = c(1,2,3))

#modelo

class_bayes = naiveBayes(x= training_set[,-5], y = training_set[,5])
y_pred = predict(class_bayes, newdata = test_set[,-5])

#MATRIZ DE CONFUSION
cm_bay = table(test_set$LABEL, y_pred)

############DEDUCCIONES A PARTIR DE LA MATRIZ DE CONFUSION#############
#Sensibilidad y Rendimiento del clasificador KNN
round(prop.table(cm_knn)*100, 2) #Representado en porcentaje
33.05+30.51+30.51 #Eficiencia del 94.07%
round(prop.table(cm_knn, 1)*100, 2) #Representado en porcentaje por filas
0+7.69+10.0 #Taza de error de 17.69%
100 - 17.69 #Rendimiento de 82.31%

#Sensibilidad y Rendimiento del clasificador Bayesiano
round(prop.table(cm_bay)*100, 2) #Representado en porcentaje
31.36+31.36+33.9 #96.62%
round(prop.table(cm_bay, 1)*100, 2) #Representado en porcentaje por filas
5.13+5.13+0 #Taza de error de 10.26%
100 - 10.26 #Rendimiento de 89.74%
#################### CURVA ROC#####################
library(knitr)
library(ROCR)
library(e1071)
library(caTools)
library(nnet)
library(scales)
set.seed(222)
#Cargara la base de datos al entorno de R
datos=read.csv("datos.csv",header=TRUE,sep=",")
datos$Temperatura=ifelse(datos$Temperatura>15,1,0)#
datos$Temperatura=as.factor(datos$Temperatura)
str(datos)
indice=sample(1:nrow(datos),size = 0.8*nrow(datos))
training=datos[indice,]
test=datos[-indice,]
library(randomForest)
#MODELo random forest
rf_model=randomForest(Temperatura~.,data =training)
rf_prediction=predict(rf_model,test,type='vote')
#modelo de regresion lineal
#lr_model=glm(PH~.,data=training,family = "binomial")
#lr_pred=prediction(lr_model,tes,type="response")
#curvas roc
library(pROC)
ROC_rf = roc(test$Temperatura,rf_prediction[,2])
#ROC_lr <- roc(test$PH, lr_prediction)
plot(ROC_rf)
####### AREA BAJO LA CURVA #####
auc(ROC_rf)
legend(.6,.2,auc(ROC_rf),title = "AUC")
